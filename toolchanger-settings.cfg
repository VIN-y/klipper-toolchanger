# Original written by Viesturs Zarins
# Modified by Justin F. Hallett
# Modified by Chinh Nhan Vo, Dec 2024
#
#####################################################################
#               tools_calibrate Configuration
#####################################################################
[tools_calibrate]
pin: PG10
travel_speed: 20             # mm to travel sideways for XY probing
spread: 7                    # mm to travel down from top for XY probing
lower_z: 1.0                 
speed: 1.5                   # The speed (in mm/sec) to move tools down onto the probe
lift_speed: 7.5              # The speed (in mm/sec) to retract between probes
final_lift_z: 3              # Z Lift after probing done, should be greater than any Z variance between tools
samples: 5
samples_result: median       # median, average
sample_retract_dist: 2
samples_tolerance: 0.0100    # UPDATE THIS WITH YOUR PRINTER
samples_tolerance_retries: 10
trigger_to_bottom_z: 1.746   # Decrease -> higher nozzle

#####################################################################
#               toolchanger Configuration
#####################################################################
[toolchanger]
t_command_restore_axis: Z    # The axis to restore, by default
params_safe_y: 120           # The closest toward the front that the toolhead can go without coliding with the docked toolhead(s)
params_close_y: 50           # The closest toward the front that the toolhead-carrier can go without coliding with the docked toolhead(s)
params_min_z: 40             # The lowest z position that tool-changing can happen
params_max_z: 250            # The highest z position that tool-changing can happen
params_fast_speed: 30000     # (1500 = 40mm/s) The speed to travel to the first point in the tool-change path
params_path_speed:  8000     # (1500 = 40mm/s) The max speed to travel during the tool-change path

params_type = 'misschanger_sb'
## 'x'/'y' is the relative position, to the the starting position of the tool path for the toolhead
## 'f' is the fraction of the path-speed to travel to the point
## 'd' indicate whether the path is relevant during drop-off. "0" is no, "1" is yes
params_misschanger_sb_path: [
                             {'x':0,        'y':0,       'f':1.00,    'd':1},
                             {'x':0,        'y':-50,     'f':0.80,    'd':1},
                             {'x':0,        'y':-60,     'f':0.70,    'd':0},    # Wiggle...
                             {'x':0,        'y':-55,     'f':0.65,    'd':0},    # ...wingle
                             {'x':0,        'y':-65,     'f':0.60,    'd':1},    # Wiggle...
                             {'x':0,        'y':-60,     'f':0.55,    'd':0},    # ...wingle
                             {'x':0,        'y':-70,     'f':0.50,    'd':0},    # Wiggle...
                             {'x':0,        'y':-65,     'f':0.45,    'd':0},    # ...wingle
                             {'x':0,        'y':-75,     'f':0.40,    'd':0},    # Wiggle...
                             {'x':0,        'y':-70,     'f':0.35,    'd':0},    # ...wingle
                             {'x':0,        'y':-77,     'f':0.30,    'd':0},    # Wiggle...
                             {'x':0,        'y':-72,     'f':0.30,    'd':0},    # ...wingle
                             {'x':0,        'y':-80,     'f':0.30,    'd':1},
                             {'x':-6.0,     'y':-80,     'f':0.20,    'd':1},  
                             {'x':-6.0,     'y':-70,     'f':0.30,    'd':1},
                             {'x':-6.0,     'y':-40,     'f':1.00,    'd':1}
                            ]

  initialize_on: manual

  initialize_gcode:
    DETECT_ACTIVE_TOOL_PROBE
    _INITIALIZE_FROM_DETECTED_TOOL

  before_change_gcode: 
    {% if tool.name %}
      RESPOND TYPE=echo MSG='Before changing {tool.name}'
      _TOOLCHANGER_TOOL_BEFORE_CHANGE TN={tool.name|replace('tool ', '', 1)}
    {% endif %}

  after_change_gcode: 
    {% if tool.name %}
      RESPOND TYPE=echo MSG='After changing {tool.name}'
      _TOOLCHANGER_TOOL_AFTER_CHANGE TN={tool.name|replace('tool ', '', 1)}
    {% endif %}
  
  dropoff_gcode:
    {% if tool.name %}
      RESPOND TYPE=echo MSG='Dropping off {tool.name}'
      _TOOLCHANGER_TOOL_DROPOFF TN={tool.name|replace('tool ', '', 1)}
    {% endif %}

  pickup_gcode:
    {% if tool.name %}
      RESPOND TYPE=echo MSG='Picking up {tool.name}'
      _TOOLCHANGER_TOOL_PICKUP TN={tool.name|replace('tool ', '', 1)}
    {% endif %}

#####################################################################
#               tool_probe_endstop
#####################################################################
[tool_probe_endstop]
crash_gcode:
    {% if printer["gcode_macro _global_variable"].printing|int == 1 %}
        RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}. Pausing the print.'
        {% if printer['pause_resume'].is_paused|int == 0 %}
            ## set hotend temp variable for reference in resume macro
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer[printer['toolhead'].extruder].target}
            SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
            BASE_PAUSE                                                                           ; pause print
            SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
            {% for tool_nr in printer.toolchanger.tool_numbers %}
                M104 T{tool_nr} S0
            {% endfor %}
            SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
        {% endif %}
    {% else %}
        RESPOND TYPE=error MSG='Tool not detected, expected {printer.toolchanger.tool_number}'
        TURN_OFF_HEATERS
    {% endif %}