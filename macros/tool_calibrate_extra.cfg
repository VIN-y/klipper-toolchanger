# Original written by Viesturs Zarins
# Modified by Chinh Nhan Vo, Dec 2024
#
#####################################################################
#                        Working
#####################################################################
#--------------------------------------------------------------------
## This macro done as such to overcomes some Klipper macro variable quirk
[gcode_macro CALIBRATE_ABSOLUTE_Z]
description: [TOOL=<index>]
    Absolute z offset calibration, in reference to the bed
gcode:
    ## Variables
    {% set tools = printer.toolchanger.tool_numbers %}
    {% set safe_z  = printer['gcode_macro _static_variable'].calibration_safe_z|float %}
    ## Message
    {% if params.TOOL != null %}
        {% if params.TOOL != 0 %}
            RESPOND TYPE=echo MSG='Calibrate T{params.TOOL}...'
        {% else %}
            RESPOND TYPE=echo MSG='Calibrate T0 absolute z offset...'
        {% endif %}
    {% else %}
        RESPOND TYPE=echo MSG='Calibrate all tools...'
    {% endif %}
    ## Working routine
    {% if printer['quad_gantry_level'].applied == True and "xyz" in printer.toolhead.homed_axes %}
        _PROBE_START
        _PROBE_CENTRE
        _RECORD_CURRENT_POSITION
        _RECORD_PROBE_DEVIATON
        G1 Z5 F1500
        ## Start probe section
        {% if params.TOOL != 0 %}
            {% if params.TOOL != null %}
                _PROBE_TOOL TOOL={params.TOOL}
                _PROBE_CENTRE
                _RECORD_CURRENT_POSITION
                G1 Z5 F1500
                _CALCULATE_Z_OFFSET
                _CALIBRATE_ABSOLUTE_Z_VARIABLE
                _SAVE_Z_OFFSET TOOL={params.TOOL}
            {% else %}
                {% for tool in tools[1:] %}
                    _PROBE_TOOL TOOL={tool}
                    _PROBE_CENTRE
                    _RECORD_CURRENT_POSITION
                    G1 Z5 F1500
                    _CALCULATE_Z_OFFSET
                    _CALIBRATE_ABSOLUTE_Z_VARIABLE
                    _SAVE_Z_OFFSET TOOL={tool}
                {% endfor %}
            {% endif %}
        {% endif %}
        ## Stop probe section
        T0
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y - 30} Z{safe_z} F9000
    {% else %}
        {% if printer['quad_gantry_level'].applied == False %}
            RESPOND TYPE=error MSG='Gantry is not LEVELED...'
        {% endif %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=error MSG='Printer is not HOMED...'
        {% endif %}
    {% endif %}

#####################################################################
#                        Hidden
#####################################################################
#--------------------------------------------------------------------
## For CALIBRATE_ABSOLUTE_Z
#--------------------------------------------------------------------
[gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE]
variable_ref_offset = 0.0
variable_probe_deviation = 0.0
variable_probe_position = 0.0
variable_tool_gcode_z_offset = 0.0
variable_tool_z_offset = 0.0
gcode:
    RESPOND TYPE=echo MSG='-    tool_gcode_z_offset: {tool_gcode_z_offset|round(6, 'common')} mm'
    RESPOND TYPE=echo MSG='-    ref_offset         : {ref_offset|round(6, 'common')} mm'
    RESPOND TYPE=echo MSG='-    probe_position     : {probe_position|round(6, 'common')} mm'
    RESPOND TYPE=echo MSG='-    probe_deviation    : {probe_deviation|round(6, 'common')} mm'
    RESPOND TYPE=echo MSG='=>   tool_z_offset      : {tool_z_offset|round(6, 'common')} mm'

#--------------------------------------------------------------------
[gcode_macro _PROBE_START]
gcode:
    M400
    T0
    G28
    SET_GCODE_VARIABLE MACRO=_CALIBRATE_ABSOLUTE_Z_VARIABLE VARIABLE=ref_offset VALUE={printer['probe'].active_tool_probe_z_offset|float}
    STOP_TOOL_PROBE_CRASH_DETECTION
    M400

#--------------------------------------------------------------------
[gcode_macro _PROBE_TOOL]
gcode:
    M400
    {% if params.TOOL != null %}
        T{params.TOOL}
        {% set toolname = "tool T" ~ params.TOOL|string %}
        {% set gcode_z_offset = printer[toolname].gcode_z_offset|float %}
        SET_GCODE_VARIABLE MACRO=_CALIBRATE_ABSOLUTE_Z_VARIABLE VARIABLE=tool_gcode_z_offset VALUE={gcode_z_offset}
        STOP_TOOL_PROBE_CRASH_DETECTION
    {% endif %}
    M400

#--------------------------------------------------------------------
[gcode_macro _PROBE_CENTRE]
gcode:
    {% set center_x = printer["gcode_macro _home"].xh|float %}
    {% set center_y = printer["gcode_macro _home"].yh|float %}
    G0 X{center_x} Y{center_y} Z5 F9000
    PROBE
    M400

#--------------------------------------------------------------------
[gcode_macro _RECORD_CURRENT_POSITION]
gcode:
    M400
    SET_GCODE_VARIABLE MACRO=_CALIBRATE_ABSOLUTE_Z_VARIABLE VARIABLE=probe_position VALUE={printer.toolhead.position[2]|float}
    M400

#--------------------------------------------------------------------
[gcode_macro _RECORD_PROBE_DEVIATON]
gcode:
    M400
    {% set ref_offset      = printer["gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE"].ref_offset|float %}
    {% set probe_position  = printer["gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE"].probe_position|float %}
    {% set probe_deviation = probe_position - ref_offset %}
    SET_GCODE_VARIABLE MACRO=_CALIBRATE_ABSOLUTE_Z_VARIABLE VARIABLE=probe_deviation VALUE={probe_deviation}
    M400

#--------------------------------------------------------------------
[gcode_macro _CALCULATE_Z_OFFSET]
gcode:
    {% set ref_offset          = printer["gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE"].ref_offset|float %}
    {% set probe_deviation     = printer["gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE"].probe_deviation|float %}
    {% set probe_position      = printer["gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE"].probe_position|float %}
    {% set tool_gcode_z_offset = printer["gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE"].tool_gcode_z_offset|float %}

    {% set tool_z_offset = probe_position - probe_deviation - tool_gcode_z_offset %}
    SET_GCODE_VARIABLE MACRO=_CALIBRATE_ABSOLUTE_Z_VARIABLE VARIABLE=tool_z_offset VALUE={tool_z_offset}

#--------------------------------------------------------------------
[gcode_macro _SAVE_Z_OFFSET]
gcode:
    {% set tool_z_offset  = printer["gcode_macro _CALIBRATE_ABSOLUTE_Z_VARIABLE"].tool_z_offset|round(6, 'common') %}
    {% if params.TOOL != null %}
        TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool_probe T{params.TOOL}" ATTRIBUTE=z_offset VALUE={tool_z_offset}
    {% endif %}
