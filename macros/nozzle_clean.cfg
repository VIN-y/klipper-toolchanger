#####################################################################
#                        Working
#####################################################################
[gcode_macro CLEAN_NOZZLE]
description: [TOOL=<index>] Leave empty to clean active tool/ Set tool number for specific tool/ Set [A] or [a] to clean all tools.
gcode:
    {% if "xyz" in printer.toolhead.homed_axes and printer['gcode_macro _static_variable'].clean_dock_x > 0 and printer['gcode_macro _home'].dock == True and printer.tool_probe_endstop.active_tool_number|int != -1 %}
        ## Variables
        {% set tools = printer.toolchanger.tool_numbers %}
        {% set clean_temp = printer['gcode_macro _static_variable'].clean_temp %}
        G90
        ## Get to toolchange height ---------------------------------
        {% if printer.toolhead.position[2] < printer['toolchanger'].params_min_z %}
            G0 Z{printer['toolchanger'].params_min_z|float} F9000
        {% endif %}
        {% if printer.toolhead.position[2] > printer['toolchanger'].params_max_z %}
            G1 Z{printer['toolchanger'].params_max_z|float} F9000
        {% endif %}
        ## Clean selected tool --------------------------------------
        {% if params.TOOL == null %}
            RESPOND TYPE=echo MSG='Clean {printer.toolchanger.tool}...'
            M104 T{printer.toolchanger.tool} S{clean_temp}
            _CLEAN
        {% else %}
            {% if params.TOOL == "A" or params.TOOL == "a" %}
                ## Clean all tools ----------------------------------
                RESPOND TYPE=echo MSG='Clean all tools...'
                {% for tool in tools %}
                    M104 T{tool} S{clean_temp}
                {% endfor %}
                {% for tool in tools|reverse %}
                    T{tool}
                    _CLEAN
                {% endfor %}
            {% else %}
                ## Clean specified tools ----------------------------
                RESPOND TYPE=echo MSG='Clean T{params.TOOL}...'
                M104 T{params.TOOL} S{clean_temp}
                T{params.TOOL}
                _CLEAN
            {% endif %}
        {% endif %}
        ## Go to centre of bed --------------------------------------
        G1 X{printer['gcode_macro _home'].xh} Y{printer['gcode_macro _home'].yh} F9000
    {% else %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=error MSG='Printer is not HOMED...'
        {% endif %}
        {% if printer['gcode_macro _static_variable'].clean_dock_x<=0 %}
            RESPOND TYPE=error MSG='Cleaning dock is not configured...'
        {% endif %}
        {% if printer['gcode_macro _home'].dock == False %}
            RESPOND TYPE=error MSG='Dock is not installed...'
        {% endif %}
        {% if printer.tool_probe_endstop.active_tool_number|int == -1 %}
            RESPOND TYPE=error MSG='No Active Tool...'
        {% endif %}
    {% endif %}

#####################################################################
#                        Hidden
#####################################################################
[gcode_macro _SCRUB]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes and printer['gcode_macro _static_variable'].clean_dock_x > 0 and printer['gcode_macro _home'].dock == True %}
        ## Variables
        {% set cle_x = printer['gcode_macro _static_variable'].clean_dock_x %}
        {% set cle_y = printer['toolchanger'].params_close_y|float %}
        {% set cle_speed = printer['gcode_macro _static_variable'].clean_speed|default(5000)|int %}
        ## Working
        G1 F{cle_speed}
        M400    
        {% for n in range(5) %}
            G1 X{cle_x + 2} Y{cle_y - 10}
            G1 X{cle_x - 2} Y{cle_y - 12}
            G1 X{cle_x + 2} Y{cle_y - 16}
            G1 X{cle_x - 2} Y{cle_y - 20}
            G1 X{cle_x + 2} Y{cle_y - 24}
            G1 X{cle_x - 2} Y{cle_y - 28}
            G1 X{cle_x + 2} Y{cle_y - 30}
            G1 X{cle_x - 2} Y{cle_y - 32}
            G1 X{cle_x + 2} Y{cle_y - 32}
            G1 X{cle_x - 2} Y{cle_y - 30}
            G1 X{cle_x + 2} Y{cle_y - 28}
            G1 X{cle_x - 2} Y{cle_y - 24}
            G1 X{cle_x + 2} Y{cle_y - 20}
            G1 X{cle_x - 2} Y{cle_y - 16}
            G1 X{cle_x + 2} Y{cle_y - 12}
            G1 X{cle_x - 2} Y{cle_y - 10}
            G1 X{cle_x + 2} Y{cle_y - 32}
            G1 X{cle_x + 2} Y{cle_y - 10}
            G1 X{cle_x - 2} Y{cle_y - 32}
            G1 X{cle_x + 0} Y{cle_y - 10}
        {% endfor %}
    {% endif %}

## ------------------------------------------------------------------
[gcode_macro _CLEAN]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes and printer['gcode_macro _static_variable'].clean_dock_x > 0 and printer['gcode_macro _home'].dock == True %}
        ## Variables
        {% set clean_temp = printer['gcode_macro _static_variable'].clean_temp %}
        {% set clean_x = printer['gcode_macro _static_variable'].clean_dock_x %}
        ## Working
        M104 S{clean_temp}
        G1 X{clean_x} Y{printer['toolchanger'].params_safe_y} F9000
        G1 Y{printer['toolchanger'].params_close_y}
        M400
        STOP_TOOL_PROBE_CRASH_DETECTION
        M400
        TEMPERATURE_WAIT SENSOR='{printer['toolhead'].extruder}' MINIMUM={clean_temp-1}
        M104 S0   
        _SCRUB
        TEMPERATURE_WAIT SENSOR='{printer['toolhead'].extruder}' MAXIMUM={clean_temp-5}
        _SCRUB
        TEMPERATURE_WAIT SENSOR='{printer['toolhead'].extruder}' MAXIMUM={clean_temp-10}
        _SCRUB
        G1 X{clean_x} Y{printer['toolchanger'].params_safe_y} F9000
    {% endif %}

# -------------------------------------------------------------------
[gcode_macro _CLEAN_MID_PRINT]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes and printer['gcode_macro _static_variable'].clean_dock_x > 0 and printer['gcode_macro _home'].dock == True and printer.tool_probe_endstop.active_tool_number|int != -1 %}
        M400    # Make sure the toolhead is at it's correct z position
        ## Variables
        {% set clean_x = printer['gcode_macro _static_variable'].clean_dock_x %}
        {% set cur_z = printer.toolhead.position[2]|float %}
        {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
        ## Get to cleaning dock -------------------------------------
        M400    # Make sure the current is recorded
        RESPOND TYPE=echo MSG='Clean mid print'
        {% if cur_z < printer['toolchanger'].params_min_z %}
            G1 Z{printer['toolchanger'].params_min_z|float} F9000
        {% endif %}
        G1 Y{printer['toolchanger'].params_safe_y} F9000
        G1 X{clean_x} F9000
        G1 Y{printer['toolchanger'].params_close_y}
        ## Cleaning -------------------------------------------------
        M400
        STOP_TOOL_PROBE_CRASH_DETECTION
        M400
        _SCRUB
        M400
        START_TOOL_PROBE_CRASH_DETECTION
        M400
        ## Get to safe position -------------------------------------
        G1 X{clean_x} Y{printer['toolchanger'].params_safe_y} F9000
    {% endif %}
