[force_move]
    enable_force_move: True

[homing_override]
axes: xyz
gcode:
    ## Trigger variables
    {% set x = 0 %}
    {% set y = 0 %}
    {% set z = 0 %}
    {% set a = 0 %}

    ## Set up variables
    {% set center_x = printer["gcode_macro _home"].xh|float %}
    {% set center_y = printer["gcode_macro _home"].yh|float %}
    {% set safe_z  = printer['gcode_macro _static_variable'].calibration_safe_z|float %}
    {% set cur_z = printer.toolhead.position[2]|float %}

    ##  Engage trigger variables according to the input
    {% if params.X is defined %}
        {% set x = 1 %}                                                           # for x home
    {% endif %}
    {% if params.Y is defined %}
        {% set y = 1 %}                                                           # for y home
    {% endif %}
    {% if params.Z is defined %}
        {% set z = 1 %}                                                           # for z home
    {% endif %}
    {% if (x == 0 and y == 0 and z == 0) %}
        {% set a = 1 %}                                                           # for home all
    {% endif %}

    ### Homing Actions
    # Mandatory clearance moves ------------------------------------------------------
    INITIALIZE_TOOLCHANGER
    M400
    STOP_TOOL_PROBE_CRASH_DETECTION
    G90
    {% if x == 1 or y == 1 or a == 1 %}
        {% if "z" in printer.toolhead.homed_axes %}                               # If z is already homed
            {% if printer.toolhead.position[2] < printer['toolchanger'].params_min_z %}
                RESPOND TYPE=echo MSG='Nozzle Clearance...'
                G0 Z{safe_z} F1500
            {% endif %}
            {% if printer.toolhead.position[2] > printer['toolchanger'].params_max_z %}
                RESPOND TYPE=echo MSG='Umbilical Clearance...'
                G1 Z{printer['toolchanger'].params_max_z|float} F1500
            {% endif %}
        {% else %}
            M400
            RESPOND TYPE=echo MSG='Umbilical Clearance...'
            G28 Z                                                                 # temporary home z
            SET_KINEMATIC_POSITION Z=0
            RESPOND TYPE=echo MSG='Nozzle Clearance...'
            G1  Z{safe_z} F1500                                                   # Move Z up off the bed
            M84
        {% endif %}
    {% endif %}
    
    # Specific moves ------------------------------------------------------------------
    {% if y == 1 or a == 1 %}                                                     # If X or Y is called
        M400
        RESPOND TYPE=echo MSG='Home Y...'
        G28 Y                                                                     # Home Y
    {% endif %}    
    
    {% if x == 1 or a == 1 %}                                                     # If X is called
        M400
        RESPOND TYPE=echo MSG='Home X...'
        G28 Y
        G28 X                                                                     # Home X
    {% endif %}
    
    {% if z == 1 or a == 1 %}                                                     # If "G28" or "G28 Z" is called
        M400
        RESPOND TYPE=echo MSG='Home Z...'
        {% if a == 1 %}                                                           # If z is already homed
            G90
            G1 X{center_x} Y{center_y} F9000                                      # Move the toolhead to the centre of the bed
        {% endif %}
        INITIALIZE_TOOLCHANGER
        G28 Z                                                                     # Home Z
        _ADJUST_Z_HOME_FOR_TOOL_OFFSET                                            # Apply toolhead specific Z-offset
    {% endif %}
    _APPLY_ACTIVE_TOOL_GCODE_OFFSETS                                              # Apply the X and Y toolhead offsets
    G90
    M400

####################################################################################
#	                         Hidden
####################################################################################
#--------------------------------------------------------------------
[gcode_macro _ADJUST_Z_HOME_FOR_TOOL_OFFSET]
description: Correct the physical Z endstop offset, relative to T0.
gcode:
    G90 ; absolute mode
    G0 Z10 F1000
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
        {% set gcode_z_offset = printer[tool].gcode_z_offset %}
        {% set probe_z_offset = printer.tool_probe_endstop.active_tool_probe_z_offset %}
        SET_KINEMATIC_POSITION Z={10.0 + probe_z_offset|float + 2*gcode_z_offset|float}
        G0 Z10 F1000
    {% endif %}

#--------------------------------------------------------------------
[gcode_macro _APPLY_ACTIVE_TOOL_GCODE_OFFSETS]
gcode:
    ; Apply gcode offsets
    {% set tool = printer.toolchanger.tool %}
    {% if tool %}
        SET_GCODE_OFFSET  X={printer[tool].gcode_x_offset}  Y={printer[tool].gcode_y_offset}  Z={printer[tool].gcode_z_offset} MOVE=1
    {% endif %}
