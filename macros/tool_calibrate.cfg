# Original written by Viesturs Zarins
# Modified by Chinh Nhan Vo, Dec 2024
#
#####################################################################
#                        Working
#####################################################################
#--------------------------------------------------------------------
## This macro done as such to overcomes some Klipper macro variable quirk
[gcode_macro CALIBRATE_OFFSETS]
description: Tool offsets calibration
gcode:
    _CPI_CHECK
    {% if params.TOOL != null and params.TOOL != 0 %}
        _CHECK_PROBE
        _CALIBRATE_OFFSETS TOOL={params.TOOL}
    {% else %}
        _CHECK_PROBE
        _CALIBRATE_OFFSETS
    {% endif %}

#--------------------------------------------------------------------
## This macro done as such to overcomes some Klipper macro variable quirk
[gcode_macro CALIBRATE_ABSOLUTE_Z]
description: Absolute Z Offset, in reference to the bed
gcode:
    ## This macro done as such to overcomes some Klipper macro variable quirk
    {% if params.TOOL != null and params.TOOL != 0 %}
        _CALIBRATE_NPO TOOL={params.TOOL}
    {% else %}
        _CALIBRATE_NPO
    {% endif %}

#####################################################################
#                        Hidden
#####################################################################
#--------------------------------------------------------------------
[gcode_macro _CALIBRATE_MOVE_OVER_PROBE]
description: Tool offsets calibration
gcode:
    {% set safe_z  = printer['gcode_macro _static_variable'].calibration_safe_z|float %}
    {% set probe_x = printer['gcode_macro _static_variable'].calibration_probe_x|float %}
    {% set probe_y = printer['gcode_macro _static_variable'].calibration_probe_y|float %}
    BED_MESH_CLEAR
    G0 Z{safe_z} F9000
    G0 X{probe_x} Y{probe_y}

#--------------------------------------------------------------------
[gcode_macro _CHECK_PROBE]
description: Tool offsets calibration
gcode:
    RESPOND TYPE=echo MSG='Check for Nudge...'
    T0
    G28
    _CALIBRATE_MOVE_OVER_PROBE
    PROBE                           # Probe to see if the Nudge is in place
    M400                            # Clear cache

#--------------------------------------------------------------------
[gcode_macro _CALIBRATE_OFFSETS]
gcode:
    {% set tools  = printer.toolchanger.tool_numbers %}
    {% set names  = printer.toolchanger.tool_names %}
    {% set safe_z = printer['gcode_macro _static_variable'].calibration_safe_z|float %}
    {% if printer['quad_gantry_level'].applied == True and "xyz" in printer.toolhead.homed_axes and printer.tools_calibrate.calibration_probe_inactive == False %}
        {% if printer.toolhead.position[2]|float > printer['gcode_macro _static_variable'].calibration_min_z|float %}
            ## Start Probe Section
            G1 Z{safe_z} F9000
            TOOL_LOCATE_SENSOR
            TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T0"
            TOOL_LOCATE_SENSOR
            {% if params.TOOL != null%}
                RESPOND TYPE=echo MSG='Calibrate T{params.TOOL}...'
                SELECT_TOOL T={params.TOOL}  RESTORE_AXIS=XYZ
                _AFTER_SELECT_TOOL
                SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0 MOVE=1
                STOP_TOOL_PROBE_CRASH_DETECTION
                TOOL_CALIBRATE_TOOL_OFFSET
                TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool T{params.TOOL}" ATTRIBUTE=gcode_x_offset VALUE="{% raw %}{x:0.6f}{% endraw %}"
                TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool T{params.TOOL}" ATTRIBUTE=gcode_y_offset VALUE="{% raw %}{y:0.6f}{% endraw %}"
                TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool T{params.TOOL}" ATTRIBUTE=gcode_z_offset VALUE="{% raw %}{z:0.6f}{% endraw %}"
            {% else %}
                RESPOND TYPE=echo MSG='Calibrate all tools...'
                {% for tool in tools[1:] %}
                    SELECT_TOOL T={tool}  RESTORE_AXIS=XYZ
                    _AFTER_SELECT_TOOL
                    SET_GCODE_OFFSET X=0.0 Y=0.0 Z=0.0 MOVE=1
                    STOP_TOOL_PROBE_CRASH_DETECTION
                    TOOL_CALIBRATE_TOOL_OFFSET
                    TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_x_offset VALUE="{% raw %}{x:0.6f}{% endraw %}"
                    TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_y_offset VALUE="{% raw %}{y:0.6f}{% endraw %}"
                    TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_z_offset VALUE="{% raw %}{z:0.6f}{% endraw %}"
                {% endfor %}
            {% endif %}
            T0
            G1 X{printer['gcode_macro _home'].xh} Y{printer.toolhead.axis_maximum.y - 10} Z{safe_z} F9000
            ## End Probe Section
        {% else %}
            G1 Z{safe_z} F9000
            RESPOND TYPE=error MSG='Calibration Probe is not in place...'
        {% endif %}
    {% else %}
        {% if printer['quad_gantry_level'].applied == False %}
            RESPOND TYPE=error MSG='Gantry is not LEVELED...'
        {% endif %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=error MSG='Printer is not HOMED...'
        {% endif %}
        {% if printer.tools_calibrate.calibration_probe_inactive == True %}
            RESPOND TYPE=error MSG='Calibration Probe is not in place...'
        {% endif %}
    {% endif %}

#--------------------------------------------------------------------
[gcode_macro _PROBE_CENTRE]
description: Probe centre of the bed
gcode:
    {% set center_x    = printer["gcode_macro _home"].xh|float %}
    {% set center_y    = printer["gcode_macro _home"].yh|float %}
    G0 X{center_x} Y{center_y} Z5 F9000
    PROBE
    M400

#--------------------------------------------------------------------
[gcode_macro _CALIBRATE_NPO]
description: Nozzle probe offset calibration
gcode:
    ## Variables
    {% set tools       = printer.toolchanger.tool_numbers %}
    {% set names       = printer.toolchanger.tool_names %}
    {% set safe_z      = printer['gcode_macro _static_variable'].calibration_safe_z|float %}

    {% if printer['quad_gantry_level'].applied == True and "xyz" in printer.toolhead.homed_axes %}
        ## Start Probe Section
        T0
        {% set T0_z_offset = printer['probe'].active_tool_probe_z_offset|float %}
        RESPOND TYPE=echo MSG='T0_z_offset: {T0_z_offset}...'
        _PROBE_CENTRE
        {% set T0_probe_offset = printer.toolhead.position[2]|float %}
        M400
        RESPOND TYPE=echo MSG='T0_probe_offset: {T0_probe_offset}...'
        {% set paper_thickness = T0_z_offset - T0_probe_offset %}
        RESPOND TYPE=echo MSG='paper_thickness: {paper_thickness}...'
        {% if params.TOOL != null %}
            RESPOND TYPE=echo MSG='Calibrate T{params.TOOL}...'
            T{params.TOOL}
            _PROBE_CENTRE
            {% set tool_probe_offset = printer.toolhead.position[2]|float %}
            M400
            RESPOND TYPE=echo MSG='tool_probe_offset: {tool_probe_offset}...'
            {% set tool_z_offset = tool_probe_offset + paper_thickness %}
            RESPOND TYPE=echo MSG='tool_z_offset: {tool_z_offset}...'
            TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="tool T{params.TOOL}" ATTRIBUTE=z_offset VALUE={tool_z_offset}
        {% else %}
            RESPOND TYPE=echo MSG='Calibrate all tools...'
            {% for tool in tools[1:] %}
                T{tool}
                _PROBE_CENTRE
                {% set tool_probe_offset = printer.toolhead.position[2]|float %}
                M400
                RESPOND TYPE=echo MSG='tool_probe_offset: {tool_probe_offset}...'
                {% set tool_z_offset = tool_probe_offset + paper_thickness %}
                RESPOND TYPE=echo MSG='tool_z_offset: {tool_z_offset}...'
                TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=z_offset VALUE={tool_z_offset}
            {% endfor %}
        {% endif %}
        T0
        G1 X{printer['gcode_macro _home'].xh} Y{printer.toolhead.axis_maximum.y - 10} Z{safe_z} F9000
        ## End Probe Section
    {% else %}
        {% if printer['quad_gantry_level'].applied == False %}
            RESPOND TYPE=error MSG='Gantry is not LEVELED...'
        {% endif %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=error MSG='Printer is not HOMED...'
        {% endif %}
    {% endif %}
