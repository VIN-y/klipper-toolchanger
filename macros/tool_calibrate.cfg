# Original written by Viesturs Zarins
# Modified by Chinh Nhan Vo, Dec 2024
#
#####################################################################
#                        Working
#####################################################################
#--------------------------------------------------------------------
## This macro done as such to overcomes some Klipper macro variable quirk
[gcode_macro CALIBRATE_OFFSETS]
description: Tool offsets calibration
gcode:
    _CPI_CHECK
    _CPI_CHECK
    {% if params.TOOL != null%}
        _CALIBRATE_OFFSETS TOOL={params.TOOL}
    {% else %}
        _CALIBRATE_OFFSETS
    {% endif %}

# #--------------------------------------------------------------------
# ## This macro done as such to overcomes some Klipper macro variable quirk
# [gcode_macro CALIBRATE_ABSOLUTE_Z]
# description: Absolute Z Offset, in reference to the bed
# gcode:
#     ## This macro done as such to overcomes some Klipper macro variable quirk
#     _CPI_CHECK
#     _CPI_CHECK
#     {% if params.TOOL != null%}
#         _CALIBRATE_NPO TOOL={params.TOOL}
#     {% else %}
#         _CALIBRATE_NPO
#     {% endif %}

#####################################################################
#                        Hidden
#####################################################################
#--------------------------------------------------------------------
[gcode_macro _CALIBRATE_MOVE_OVER_PROBE]
description: Tool offsets calibration
gcode:
    {% set safe_z  = printer['gcode_macro _static_variable'].calibration_safe_z|float %}
    {% set probe_x = printer['gcode_macro _static_variable'].calibration_probe_x|float %}
    {% set probe_y = printer['gcode_macro _static_variable'].calibration_probe_y|float %}
    BED_MESH_CLEAR
    G0 Z{safe_z} F9000
    G0 X{probe_x} Y{probe_y}
#--------------------------------------------------------------------
[gcode_macro _CALIBRATE_OFFSETS]
gcode:
    {% set tools  = printer.toolchanger.tool_numbers %}
    {% set names  = printer.toolchanger.tool_names %}
    {% set safe_z = printer['gcode_macro _static_variable'].calibration_safe_z|float %}
    {% if printer['quad_gantry_level'].applied == True and "xyz" in printer.toolhead.homed_axes and printer.tools_calibrate.calibration_probe_inactive == False %}
        T0
        G28
        _CALIBRATE_MOVE_OVER_PROBE
        PROBE                                             # Probe to see if the Nudge is in place
        M400                                              # Clear cache
        {% if printer.toolhead.position[2]|float > printer['gcode_macro _static_variable'].calibration_min_z|float %}
            ## Start Probe Section
            G1 Z{safe_z} F9000
            TOOL_LOCATE_SENSOR
            {% if params.TOOL != null%}
                RESPOND TYPE=echo MSG='Calibrate T{params.TOOL}...'
                SELECT_TOOL T={params.TOOL}  RESTORE_AXIS=XYZ
                _AFTER_SELECT_TOOL
                STOP_TOOL_PROBE_CRASH_DETECTION
                TOOL_CALIBRATE_TOOL_OFFSET
            {% else %}
                RESPOND TYPE=echo MSG='Calibrate all tools...'
                {% for tool in tools[1:] %}
                    SELECT_TOOL T={tool}  RESTORE_AXIS=XYZ
                    _AFTER_SELECT_TOOL
                    STOP_TOOL_PROBE_CRASH_DETECTION
                    TOOL_CALIBRATE_TOOL_OFFSET
                    TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_x_offset VALUE="{% raw %}{x:0.6f}{% endraw %}"
                    TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_y_offset VALUE="{% raw %}{y:0.6f}{% endraw %}"
                    TOOL_CALIBRATE_SAVE_TOOL_OFFSET SECTION="{names[loop.index]}" ATTRIBUTE=gcode_z_offset VALUE="{% raw %}{z:0.6f}{% endraw %}"
                {% endfor %}
            {% endif %}
            T0
            G1 X{printer['gcode_macro _home'].xh} Y{printer.toolhead.axis_maximum.y - 10} Z{safe_z} F9000
            ## End Probe Section
        {% else %}
            G1 Z{safe_z} F9000
            RESPOND TYPE=error MSG='Calibration Probe is not in place...'
        {% endif %}
    {% else %}
        {% if printer['quad_gantry_level'].applied == False %}
            RESPOND TYPE=error MSG='Gantry is not LEVELED...'
        {% endif %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=error MSG='Printer is not HOMED...'
        {% endif %}
        {% if printer.tools_calibrate.calibration_probe_inactive == True %}
            RESPOND TYPE=error MSG='Calibration Probe is not in place...'
        {% endif %}
    {% endif %}

#--------------------------------------------------------------------
[gcode_macro _CALIBRATE_NPO]
description: Nozzle probe offset calibration
gcode:
    {% set tools  = printer.toolchanger.tool_numbers %}
    {% set names  = printer.toolchanger.tool_names %}
    {% set safe_z = printer['gcode_macro _static_variable'].calibration_safe_z|float %}
    {% if printer['quad_gantry_level'].applied == True and "xyz" in printer.toolhead.homed_axes and printer.tools_calibrate.calibration_probe_inactive == False %}
        T0
        G28
        _CALIBRATE_MOVE_OVER_PROBE
        PROBE                                             # Probe to see if the Nudge is in place
        M400                                              # Clear cache
        {% if printer.toolhead.position[2]|float > printer['gcode_macro _static_variable'].calibration_min_z|float %}
            ## Start Probe Section
            G1 Z{safe_z} F9000
            {% if params.TOOL != null%}
                RESPOND TYPE=echo MSG='Calibrate T{params.TOOL}...'
                T{params.TOOL}
                _CALIBRATE_MOVE_OVER_PROBE
                TOOL_LOCATE_SENSOR
                PROBE                                     # Probe to see if the Nudge is in place
                TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T{printer.toolchanger.tool_number}"
            {% else %}
                RESPOND TYPE=echo MSG='Calibrate all tools...'
                {% for tool in tools[0:] %}
                    T{tool}
                    _CALIBRATE_MOVE_OVER_PROBE
                    TOOL_LOCATE_SENSOR
                    PROBE                                 # Probe to see if the Nudge is in place
                    TOOL_CALIBRATE_PROBE_OFFSET PROBE="tool_probe T{printer.toolchanger.tool_number}"
                    G1 Z{safe_z} F9000
                {% endfor %}
            {% endif %}
            T0
            G1 X{printer['gcode_macro _home'].xh} Y{printer.toolhead.axis_maximum.y - 10} Z{safe_z} F9000
            ## End Probe Section
        {% else %}
            G1 Z{safe_z} F9000
            RESPOND TYPE=error MSG='Calibration Probe is not in place...'
        {% endif %}
    {% else %}
        {% if printer['quad_gantry_level'].applied == False %}
            RESPOND TYPE=error MSG='Gantry is not LEVELED...'
        {% endif %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            RESPOND TYPE=error MSG='Printer is not HOMED...'
        {% endif %}
        {% if printer.tools_calibrate.calibration_probe_inactive == True %}
            RESPOND TYPE=error MSG='Calibration Probe is not in place...'
        {% endif %}
    {% endif %}
