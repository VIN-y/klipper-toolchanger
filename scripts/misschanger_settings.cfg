# Original written by Viesturs Zarins
# Modified by Justin F. Hallett
# Modified by Chinh Nhan Vo, 2024
#
#--------------------------------------------------------------------
[tool_probe_endstop]
crash_mintime: 2              # seconds to wait before announcing a crash 
crash_gcode:
    _TOOLCHANGER_CRASH

#--------------------------------------------------------------------
[tools_calibrate]
pin: PG10                     # probe pin
travel_speed: 20              # mm/s to travel sideways for XY probing
spread: 6                     # mm to travel down from top for XY probing
lower_z: 1.0                  # The speed (in mm/sec) to move tools down onto the probe
speed: 1.5                    # The speed (in mm/sec) to retract between probes
lift_speed: 5.0               # The speed (in mm/sec) to retract between probes
final_lift_z: 3               # Z Lift after probing done, should be greater than any Z variance between tools
samples: 5                    # Number of sample
samples_result: median        # median, average
sample_retract_dist: 1        # Sample retract distance        
samples_tolerance: 0.0100     # UPDATE THIS WITH YOUR PRINTER
samples_tolerance_retries: 10 # Number of retries on failures
trigger_to_bottom_z: 1.620    # Decrease -> higher nozzle

#--------------------------------------------------------------------
[toolchanger]
t_command_restore_axis:       # The axis to restore, by default
uses_axis: xy                 # Axis used by the tool change process
on_axis_not_homed: abort      # When required axis are not homed. Option: 'abort' or 'home' to home the required axis
params_safe_y: 120            # The closest toward the front that the toolhead can go without coliding with the docked toolhead(s)
params_close_y: 50            # The closest toward the front that the toolhead-carrier can go without coliding with the docked toolhead(s)
params_min_z: 40              # The lowest z position that tool-changing can happen
params_max_z: 250             # The highest z position that tool-changing can happen
params_fast_speed: 30000      # (1500 = 40mm/s) The speed to travel to the first point in the tool-change path
params_path_speed:  9000      # (1500 = 40mm/s) The max speed to travel during the tool-change path
params_stabilise_time: 200    # Pause time before and after toolchange, for stability. Measure in ms. 

params_need_clean_materials: ['PETG']

params_type = 'sb_misschanger'
## 'x'/'y' is the relative position, to the the starting position of the tool path for the toolhead
## 'f' is the fraction of the path-speed to travel to the point
## 'd' indicate whether the path is relevant during drop-off. "0" is no, "1" is yes
params_sb_misschanger_path: [{'x':0,       'y':0,      'f':1.00,    'd':1},
                             {'x':0,       'y':-50,    'f':0.80,    'd':1},
                             {'x':0,       'y':-65,    'f':0.60,    'd':1},    # Wiggle...
                             {'x':0,       'y':-62,    'f':0.55,    'd':0},    # ...wingle
                             {'x':0,       'y':-68,    'f':0.55,    'd':0},    # Wiggle...
                             {'x':0,       'y':-61,    'f':0.55,    'd':0},    # ...wingle
                             {'x':0,       'y':-69,    'f':0.55,    'd':0},    # Wiggle...
                             {'x':0,       'y':-60,    'f':0.55,    'd':0},    # ...wingle
                             {'x':0,       'y':-70,    'f':0.50,    'd':0},    # Wiggle...
                             {'x':0,       'y':-80,    'f':0.30,    'd':1},
                             {'x':-6.0,    'y':-80,    'f':0.20,    'd':1},  
                             {'x':-6.0,    'y':-70,    'f':0.30,    'd':1},
                             {'x':-6.0,    'y':-40,    'f':1.00,    'd':1}]

initialize_on: manual

initialize_gcode:
    DETECT_ACTIVE_TOOL_PROBE
    _INITIALIZE_FROM_DETECTED_TOOL

before_change_gcode: 
    {% if tool.name %}
      # RESPOND TYPE=echo MSG='Before changing {tool.name}'
      _TOOL_BEFORE_CHANGE TN={tool.name|replace('tool ', '', 1)}
    {% endif %}

after_change_gcode: 
    {% if tool.name %}
      # RESPOND TYPE=echo MSG='After changing {tool.name}'
      _TOOL_AFTER_CHANGE TN={tool.name|replace('tool ', '', 1)}
    {% endif %}

dropoff_gcode:
    {% if tool.name %}
      # RESPOND TYPE=echo MSG='Dropping off {tool.name}'
      _TOOL_DROPOFF TN={tool.name|replace('tool ', '', 1)}
    {% endif %}

pickup_gcode:
    {% if tool.name %}
      # RESPOND TYPE=echo MSG='Picking up {tool.name}'
      _TOOL_PICKUP TN={tool.name|replace('tool ', '', 1)}
    {% endif %}
